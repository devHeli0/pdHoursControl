version: '3.9'

services:
  # Postgres database service
  postgresDB:
    container_name: 'ctPdHoursControlDB'
    image: postgres:latest
    networks:
      - database-network
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persistent storage for data
    restart: always
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U pdAdmin -d pdHoursControlDB -h localhost -p 5432',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    cap_add:
      - SYS_NICE
    command: ['postgres', '-c', 'log_statement=all']

  backapp:
    container_name: 'ctBackPdHours'
    build: ./backdev
    networks:
      - database-network
      - backend-network
    ports:
      - ${PORT}:${PORT}
    volumes:
    - ./app/:/app/
    - /app/node_modules
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - PORT=${PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
    restart: always
    healthcheck:
      test: ['CMD', 'nc', '-z', 'localhost', '3000']
      timeout: 10s
      retries: 5
    depends_on:
      - postgresDB

  # frontapp:
  #   container_name: 'ctFrontPdHours'
  #   build: ./frontdev
  #   ports:
  #     - 3001:3001
  #   environment:
  #     - REACT_APP_HOST = http://frontapp:3001
  #     - REACT_APP_API = http://backclientmanagement:3000
  #   networks:
  #     - backend-network

volumes:
  postgres_data: {} # Define an empty volume for Postgres data

networks:
  database-network:
  backend-network:
